"use strict";var GameEngineComponent=(()=>{var o=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.prototype.hasOwnProperty;var p=(n,t)=>{for(var e in t)o(n,e,{get:t[e],enumerable:!0})},f=(n,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of m(t))!u.call(n,i)&&i!==e&&o(n,i,{get:()=>t[i],enumerable:!(r=s(t,i))||r.enumerable});return n};var l=n=>f(o({},"__esModule",{value:!0}),n);var d={};p(d,{configSchema:()=>g,parseConfig:()=>c,serializeConfig:()=>h,summarizeConfig:()=>y});var g={type:"object",required:["startingPosition"],properties:{startingPosition:{type:"array",minItems:3,maxItems:3,items:{type:"array",minItems:3,maxItems:3,items:{type:["string","null"],enum:["X","O",null]}}}}};function c(n){let t=0,e=0,r=n.startingPosition.map(i=>i.map(a=>a==="X"?t++*2:a==="O"?e++*2+1:null));if(t-e!==0&&t-e!==1)throw new Error("There should be an even number of Xs and Os (or just one more X than O) in the starting position.");return{initialBoard:r,initialTurn:e+t}}function h(n){return n.initialBoard.map(e=>e.map(r=>r===null?"empty":r%2===0?"x":"o")).map(e=>e.join(",")).join("|")}function y(n){return n.initialTurn===0?"standard starting position":"custom starting position"}return l(d);})();
